![项目截图](123.png)

=============== 隐式水印检测工具 ===============



所有代码由deepseek生成。

AI炼丹检测图片防数据投毒工具，自动筛选文件夹图片，分类加了料的图和干净的图，剔除隐式水印图片，避免训练AI模型时各种手崩脚崩脸崩横纹竖纹。

不得使用本工具任何干违法的事，否则你自己负所有责任。

把图片放入input_images文件夹，点击run.bat运行
含有隐式水印的图片将会自动出现在detection_results/watermarked文件夹下
干净的图片则是出现在detection_results/clean文件夹下


项目：Implicit_watermark_detection
版本：1.0

1. 工具准备
   - 将所有文件放置在同一文件夹中
   - 确保文件夹结构完整：
        Implicit_watermark_detection/
        ├── run.bat
        ├── python/（便携版Python）
        ├── scripts/（检测脚本）
        ├── input_images/（默认输入文件夹）
        └── README.txt

2. 准备图像
   - 将图像放入“input_images”文件夹
   - 支持格式：JPG、PNG、BMP、TIFF、WEBP

3. 运行检测
   - 双击“run.bat”
   - 首次运行将设置环境（耗时1-5分钟）
   - 后续运行可立即启动

4. 查看结果
   - 结果保存至“detection_results”文件夹
   - 包含内容：
        watermarked/ - 含水印图像
        clean/ - 无水印图像
        *_spectrum.* - 频谱可视化文件
        watermark_report.csv - 详细检测报告
        summary.txt - 检测总结报告

5. 技术说明
   - 检测算法基于傅里叶变换分析
   - 置信度阈值：0.85（可在代码中调整）
   - 支持任意尺寸/分辨率的图像

6. 故障排除
   - 确保有足够磁盘空间（至少500MB可用）
   - 处理过程中请勿关闭命令窗口
   - 大批量图像检测可能需要较长时间
   
   
   
   
   
   
=============== Implicit Watermark Detection Tool ===============

All code is generated by deeseek.

AI Alchemy Detection Tool for Image Data Poisoning Prevention: Automatically filters images in folders, classifies contaminated images and clean images, and removes images with implicit watermarks to avoid various anomalies (such as distorted hands, feet, faces, horizontal/vertical streaks) during AI model training.

Do not use this tool for any illegal activities; otherwise, you will bear all responsibilities.

Place the images into the input_images folder and click run.bat to start.  
Images with implicit watermarks will be automatically moved to the detection_results/watermarked folder.  
Clean images will appear in the detection_results/clean folder.


Project: Implicit_watermark_detection
Version: 1.0

1. Tool Preparation
   - Place all files in the same folder
   - Ensure folder structure is intact:
        Implicit_watermark_detection/
        ├── run.bat
        ├── python/ (Portable Python)
        ├── scripts/ (Detection scripts)
        ├── input_images/ (Default input folder)
        └── README.txt

2. Prepare Images
   - Place your images in the "input_images" folder
   - Supported formats: JPG, PNG, BMP, TIFF, WEBP

3. Run Detection
   - Double-click "run.bat"
   - First run will set up environment (takes 1-5 minutes)
   - Subsequent runs start immediately

4. View Results
   - Results are saved in "detection_results" folder
   - Contains:
        watermarked/ - Images with watermarks
        clean/ - Clean images
        *_spectrum.* - Spectrum visualizations
        watermark_report.csv - Detailed report
        summary.txt - Summary report

5. Technical Notes
   - Detection algorithm based on Fourier transform analysis
   - Confidence threshold: 0.85 (adjustable in code)
   - Supports images of any size/resolution

6. Troubleshooting
   - Ensure sufficient disk space (min 500MB free)
   - Do not close the command window during processing
   - Large image collections may take significant time